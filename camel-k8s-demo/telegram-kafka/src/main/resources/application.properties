
## set the environment variable TELEGRAM_AUTHORIZATION_TOKEN with your Telegram bot Authorization Token
camel.component.telegram.authorizationToken=${TELEGRAM_AUTHORIZATION_TOKEN}
#camel.component.telegram.authorizationToken=5774939016:AAFBjawrCQKXFEKLwDu1asa5hOVtYlrSgV4

quarkus.kafka.devservices.enabled=true
%prod.camel.component.kafka.brokers=PLAINTEXT://telegram-kafka:9092

msg.bot.start=Hello. \n\n\Thanks for joining our talk about @ApacheCamel üê™ and @Quarkus\n\nFeel free to send us a message :)
msg.bot.msg= Thanks for your message.

# Bucket (referenced in the routes)
aws-s3.bucket-name=camel-k

# Minio information
minio.access-key=minio
minio.secret-key=minio123
minio.endpoint=http://127.0.0.1:9000
# Due to a problem in Developers Sandbox IP address needs to be used here
%prod.minio.endpoint=http://172.30.123.131:9000
#%prod.minio.endpoint=http://minio:9000


# Camel AWS2 S3
camel.component.aws2-s3.region=eu-west-1
camel.component.aws2-s3.access-key={{minio.access-key}}
camel.component.aws2-s3.secret-key={{minio.secret-key}}
camel.component.aws2-s3.uri-endpoint-override = {{minio.endpoint}}
camel.component.aws2-s3.override-endpoint = true
camel.component.aws2-s3.autoCreateBucket = true

#quarkus.live-reload.instrumentation=true

quarkus.openshift.env.mapping.telegram-authorization-token.from-secret=telegram-config
quarkus.openshift.env.mapping.telegram-authorization-token.with-key=authorization-token
